service: notes-api
frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221
  stage: dev
  region: ap-south-1

functions:
  nashir_lambda_authorizer:
    handler: my-authorizer.authHandler

  createNote:
    environment:
      NOTES_TABLE_NAME: !Ref notesTable
      AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:PutItem
        Resource: !GetAtt notesTable.Arn
    handler: handler.createNote
    events:
      - http:
          method: post
          path: notes
          authorizer: nashir_lambda_authorizer
  updateNote:
    environment:
      NOTES_TABLE_NAME: !Ref notesTable
      AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:UpdateItem
        Resource: !GetAtt notesTable.Arn
    handler: handler.updateNote
    events:
      - http:
          method: put
          path: notes/{id}
          authorizer: nashir_lambda_authorizer

  deleteNote:
    environment:
      NOTES_TABLE_NAME: !Ref notesTable
      AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:DeleteItem
        Resource: !GetAtt notesTable.Arn
    handler: handler.deleteNote
    events:
      - http:
          method: delete
          path: notes/{id}
          authorizer: nashir_lambda_authorizer
          
  getAllNotes:
    environment:
      NOTES_TABLE_NAME: !Ref notesTable
      AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:Scan
        Resource: !GetAtt notesTable.Arn
    handler: handler.getAllNotes
    events:
      - http:
          method: get
          path: notes
          authorizer: nashir_lambda_authorizer

plugins:
  - serverless-iam-roles-per-function 

# you can add CloudFormation resource templates here
resources:
 Resources:
   notesTable:
     Type: AWS::DynamoDB::Table
     Properties:
      TableName: notesTable
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: notesId
          AttributeType: S
      KeySchema:
        - AttributeName: notesId
          KeyType: HASH

